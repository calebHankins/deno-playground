// For format details, see https://aka.ms/vscode-remote/devcontainer.json
{
    "name": "deno-playground",
    "dockerFile": "Dockerfile",
    "appPort": [],
    "postCreateCommand": "npm install && npm run configureSSH",
    "build": {
        "args": {
            // "BASE_IMAGE":"node:current-alpine", // use alternate base image // needs do be alpine based or the dockerfile needs massive changes
        }
    },
    // "initializeCommand": "docker run --rm -it -e HOME_OVERRIDE=/host_home --mount type=bind,source=${localWorkspaceFolder},target=/workspace -w /workspace --mount source=devContainerInit-node_mods,target=/workspace/node_modules,type=volume  -v ~:/host_home node:lts-alpine npm run --production devContainerInit",
    "customizations": {
        "vscode": {
            "extensions": [
                "eamodio.gitlens",
                "editorconfig.editorconfig",
                "ms-azuretools.vscode-docker",
                "ms-vscode.vscode-typescript-tslint-plugin",
                "dbaeumer.vscode-eslint",
                "streetsidesoftware.code-spell-checker",
                "ms-vscode-remote.vscode-remote-extensionpack",
                "mhutchie.git-graph",
                "yzhang.markdown-all-in-one",
                "davidanson.vscode-markdownlint",
                "mutantdino.resourcemonitor",
                "bierner.emojisense",
                "wallabyjs.quokka-vscode",
                "sketchbuch.vsc-quokka-statusbar",
                "github.vscode-pull-request-github",
                "github.remotehub"
            ],
            "settings": {
                "remote.extensionKind": {
                    // switch docker to use the 'ui' mode so it runs outside of the container.
                    // https://github.com/microsoft/vscode-docker/wiki/Docker-in-a-Dev-Container#option-b-docker-as-a-ui-extension
                    "ms-azuretools.vscode-docker": "ui"
                }
            }
        }
    },
    "runArgs": [],
    "mounts": [
        // review side effects here: https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild
        // .ssh staging folders. Windows file permissions are too loose for ssh to function normally. Staging these and copying to ~/.ssh to lock down permissions in the container
        // see https://code.visualstudio.com/docs/remote/troubleshooting#_fixing-ssh-file-permission-errors for more info
        "source=${env:HOME}${env:USERPROFILE}/.ssh/,target=/root/.ssh${env:USERPROFILE}/,type=bind,consistency=cached",
        // host gitconfig
        // "source=${env:HOME}${env:USERPROFILE}/.gitconfig/,target=/root/.gitconfig,type=bind,consistency=cached",
        // aws config
        // "source=${env:HOME}${env:USERPROFILE}/.aws,target=/root/.aws,type=bind",
        // let's load our modules into a persistent volume for performance and to alleviate any OS specific issue
        "source=deno-playground-node_modules,target=/workspaces/deno-playground/node_modules,type=volume",
        // // extension code persistence
        // "source=deno-playground-extensions,target=/root/.vscode-server/extensions,type=volume",
        // "source=deno-playground-extensions-insiders,target=/root/.vscode-server-insiders/extensions,type=volume",
        // user setting and workspace persistence
        // "source=deno-playground-vscode-data,target=/root/.vscode-server/data,type=volume",
        // "source=deno-playground-vscode-data-insiders,target=/root/.vscode-server-insiders/data,type=volume",
        // quokka config persistence
        "source=deno-playground-quokka,target=/root/.quokka/,type=volume",
        // persist command history
        "source=deno-playground-ash_history,target=/command_history,type=volume"
    ],
    "containerEnv": {
        // set a special folder path for Windows hosts. If we detect a Windows path downstream we'll fix the permissions
        "SSH_TEMP_FOLDER_NAME": "/root/.ssh${env:USERPROFILE}"
    }
}
